name: CI - Create CodeSee Maps
on:
  workflow_dispatch:
  schedule:
    - cron: '25 0/12 * * 1-5' # Build once every 12 hours, starting at 25 minutes past the hour (UTC)

  pull_request_target:
    paths-ignore:
      - 'docs/**'
    types: [opened, synchronize, reopened]

jobs:
  test_map_action:
    runs-on: ubuntu-20.04
    if: ${{ github.actor != 'renovate[bot]' && github.actor != 'camperbot' }}
    continue-on-error: true
    name: Run CodeSee Map Analysis
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      # codesee-detect-languages has an output with id languages.
      - name: Detect Languages
        id: detect-languages
        uses: Codesee-io/codesee-detect-languages-action@latest

      - name: Configure JDK 16
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3
        if: ${{ fromJSON(steps.detect-languages.outputs.languages).java }}
        with:
          java-version: '16'
          distribution: 'zulu'

      # CodeSee Maps Go support uses a static binary so there's no setup step required.

      - name: Configure Node.js 16
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3
        if: ${{ fromJSON(steps.detect-languages.outputs.languages).javascript }}
        with:
          node-version: '16'

      - name: Configure Python 3.x
        uses: actions/setup-python@3542bca2639a428e1796aaa6a2ffef0c0f575566 # v3
        if: ${{ fromJSON(steps.detect-languages.outputs.languages).python }}
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Configure Ruby '3.x'
        uses: ruby/setup-ruby@v1
        if: ${{ fromJSON(steps.detect-languages.outputs.languages).ruby }}
        with:
          ruby-version: '3.0'

      # CodeSee Maps Rust support uses a static binary so there's no setup step required.

      - name: Generate Map
        id: generate-map
        uses: Codesee-io/codesee-map-action@latest
        with:
          step: map
          github_ref: ${{ github.ref }}
          languages: ${{ steps.detect-languages.outputs.languages }}

      - name: Upload Map
        id: upload-map
        uses: Codesee-io/codesee-map-action@latest
        with:
          step: mapUpload
          api_token: ${{ secrets.CODESEE_ARCH_DIAG_API_TOKEN }}
          github_ref: ${{ github.ref }}

      - name: Insights
        id: insights
        uses: Codesee-io/codesee-map-action@latest
        with:
          step: insights
          api_token: ${{ secrets.CODESEE_ARCH_DIAG_API_TOKEN }}
          github_ref: ${{ github.ref }}
